# This file contains common pin mappings for the BigTreeTech Octopus.
# To use this config, the firmware should be compiled for the
# STM32F446 with a "32KiB bootloader" and a "12MHz crystal" clock reference.

# See docs/Config_Reference.md for a description of parameters.

# Driver0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 256
rotation_distance: 40
endstop_pin: PG6
position_endstop: 0
position_max: 235
homing_speed: 50

# Driver1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 256
rotation_distance: 40
endstop_pin: PG9
position_endstop: 0
position_max: 235
homing_speed: 50

# Driver2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 256
rotation_distance: 8
endstop_pin: PG10
position_endstop: 0
position_max: 250

# Driver3
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
#[stepper_]
#step_pin: PG4
#dir_pin: PC1
#enable_pin: PA0
#endstop_pin: PG11
#...

# Driver4
[extruder]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 256
rotation_distance: 371
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA2 # HE0
sensor_pin:  PF4 # T0
sensor_type: Generic 3950
max_extrude_only_distance: 500
min_temp: 0
max_temp: 300

[filament_switch_sensor extruder]
pause_on_runout: true
switch_pin: PG11 # DIAG3

## Driver5
#[extruder1]
#step_pin: PC13
#dir_pin: !PF0
#enable_pin: !PF1
#microsteps: 256
#rotation_distance: 69.420
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PA3 # HE1
#sensor_pin:  PF5 # T1
#sensor_type: Generic 3950
#max_extrude_only_distance: 500
#min_temp: 0
#max_temp: 220

# Driver6
#[extruder2]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
#heater_pin: PB10 # HE2
#sensor_pin: PF6 # T2
#...

# Driver7
#[extruder3]
#step_pin: PE6
#dir_pin: PA14
#enable_pin: !PE0
#heater_pin: PB11 # HE3
#sensor_pin: PF7 # T3
#...

[manual_stepper curtain]
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
microsteps: 1
rotation_distance: 10.4

#[heater_fan efan]
#pin: PD14
#max_power: 0.5
#hardware_pwm: true
#heater: extruder #, extruder1

[gcode_macro M106]
gcode: SET_FAN_SPEED FAN=fan0 SPEED={ params.S|float / 255 }
       SET_FAN_SPEED FAN=fan1 SPEED={ params.S|float / 255 }

[gcode_macro M107]
gcode: M106 S0

# From https://github.com/Desuuuu/klipper-macros/blob/master/macros/M205.cfg
[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro T0]
gcode: ACTIVATE_EXTRUDER EXTRUDER=extruder

#[gcode_macro T1]
#gcode: ACTIVATE_EXTRUDER EXTRUDER=extruder1

[fan_generic fan0]
# It's a PWM port at TIM1_CH1 according to ST's datasheet: https://www.st.com/resource/en/datasheet/stm32f446re.pdf
pin: PA8
hardware_pwm: false # idk why but fan no work with hardware PWM

[fan_generic fan1]
pin: PE5
hardware_pwm: true

[heater_bed]
heater_pin: PA1 # HEB
sensor_pin: PF3 # TB
sensor_type: Generic 3950
min_temp: 0
max_temp: 100

[bed_screws]
screw1: 50, 50
screw2: 185, 50
screw3: 185, 185
screw4: 50, 185

#[heater_fan fan1]
#pin: PE5

#[heater_fan fan2]
#pin: PD12

#[heater_fan fan3]
#pin: PD13

#[heater_fan fan4]
#pin: PD14

#[controller_fan fan5]
#pin: PD15

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1F0013001550535556323420-if00
# CAN bus is also available on this board

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1000
max_z_velocity: 5
max_z_accel: 100

[controller_fan mobo_fan]
pin: PD15
stepper: stepper_x, stepper_y, stepper_z
hardware_pwm: true


########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
#diag_pin: PG6
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD11
#diag_pin: PG9
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC6
#diag_pin: PG10
run_current: 0.800
stealthchop_threshold: 999999

#[tmc2209 driver3]
#uart_pin: PC7
##diag_pin: PG11
#run_current: 0.800
#stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PE4
run_current: 0.800
stealthchop_threshold: 999999

#[tmc2209 extruder1]
#uart_pin: PF2
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999

[tmc2209 manual_stepper curtain]
uart_pin: PD3
run_current: 0.800
#stealthchop_threshold: 999999


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

# A [probe] section can be defined instead with a pin: setting identical
# to the sensor_pin: for a bltouch
#[bltouch]
#sensor_pin: PB7
#control_pin: PB6
#z_offset: 0

#[neopixel my_neopixel]
#pin: PB0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.940
#*# pid_ki = 1.892
#*# pid_kd = 126.468
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.438
#*# pid_ki = 1.592
#*# pid_kd = 779.218
